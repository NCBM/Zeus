import jep

class SealedObject(jep.PyJObject): ...

class MacSpi(jep.PyJObject): ...

class SecretKey(jep.PyJObject): ...

class Cipher(jep.PyJObject): ...

class SecretKeyFactory(jep.PyJObject): ...

class KeyGeneratorSpi(jep.PyJObject): ...

class EncryptedPrivateKeyInfo(jep.PyJObject): ...

class ExemptionMechanismException(jep.PyJObject): ...

class BadPaddingException(jep.PyJObject): ...

class CipherSpi(jep.PyJObject): ...

class ExemptionMechanismSpi(jep.PyJObject): ...

class KeyAgreementSpi(jep.PyJObject): ...

class KeyGenerator(jep.PyJObject): ...

class NullCipher(jep.PyJObject): ...

class Mac(jep.PyJObject): ...

class KeyAgreement(jep.PyJObject): ...

class AEADBadTagException(jep.PyJObject): ...

class ShortBufferException(jep.PyJObject): ...

class ExemptionMechanism(jep.PyJObject): ...

class SecretKeyFactorySpi(jep.PyJObject): ...

class NoSuchPaddingException(jep.PyJObject): ...

class CipherOutputStream(jep.PyJObject): ...

class CipherInputStream(jep.PyJObject): ...

class IllegalBlockSizeException(jep.PyJObject): ...

